--- install cfssl

wget https://pkg.cfssl.org/R1.2/cfssl_linux-amd64
chmod +x cfssl_linux-amd64
mv cfssl_linux-amd64 $HOME/.local/bin/cfssl

wget https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64
chmod +x cfssljson_linux-amd64
mv cfssljson_linux-amd64 $HOME/.local/bin/cfssljson

wget https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64
chmod +x cfssl-certinfo_linux-amd64
mv cfssl-certinfo_linux-amd64 $HOME/.local/bin/cfssl-certinfo

export PATH=$HOME/.local/bin:$PATH


--- create cert

1. create ca-config.json and ca-csr.json and then run:
cfssl gencert -initca ca-csr.json | cfssljson -bare ca

2. create server-csr.json and then run:
cfssl gencert -ca=ca.pem -ca-key=ca-key.pem --config=ca-config.json -profile=kubernetes server-csr.json | cfssljson -bare server


--- add cluster/user/context

kubectl config set-cluster k8s-cluster \
  --certificate-authority=ca.pem \
  --embed-certs=true \
  --server=https://<CLUSTER-IP>:<PORT-6443>

kubectl config set-credentials admin \
  --client-certificate=server.pem \
  --client-key=server-key.pem

kubectl config set-context k8s-context \
  --cluster=k8s-cluster \
  --user=admin


--- src

https://kubernetes.io/docs/tasks/administer-cluster/certificates/
https://github.com/kelseyhightower/kubernetes-the-hard-way/blob/master/docs/04-certificate-authority.md
https://programmersought.com/article/8642301128/
https://acloudguru.com/hands-on-labs/configuring-kubectl-to-access-a-remote-cluster
